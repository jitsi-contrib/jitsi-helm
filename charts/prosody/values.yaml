# Default values for prosody.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

domain:

dataDir: /config/data
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podLabels: {}
podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    bosh-insecure: 5280
    bosh-secure: 5281
    xmpp-c2s: 5222
    xmpp-s2s: 5269
    xmpp-component: 5347

ingress:
  enabled: false
  # ingressClassName: "nginx-ingress-0"
  annotations: {}
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /http-bind
    port: bosh-insecure
readinessProbe:
  httpGet:
    path: /http-bind
    port: bosh-insecure

persistence:
  enabled: true
  size: 500Mi
  storageClassName:

nodeSelector: {}

tolerations: []

affinity: {}

extraEnvs: []
extraEnvFrom: []
secretEnvs: {}

extraVolumes: []
  # - name: prosody-modules
  #   configMap:
  #     name: prosody-modules

extraVolumeMounts: []
  # - name: prosody-modules
  #   subPath: mod_measure_client_presence.lua
  #   mountPath: /prosody-plugins-custom/mod_measure_client_presence.lua

metrics:
  enabled: false
  allowed_cidr: "0.0.0.0/0"  # change to cluster pod ip cidr
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: "0.76.1"
    pullPolicy: IfNotPresent
  serviceMonitor:
    enabled: true
    selector:
      release: prometheus-operator
    interval: 10s
    # honorLabels: false
