{{- if and .Values.jibri.enabled (not .Values.jibri.useExternalJibri) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "jitsi-meet.jibri.fullname" . }}
  labels:
    {{- include "jitsi-meet.jibri.labels" . | nindent 4 }}
  {{- with .Values.jibri.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.jibri.replicaCount | default 1 }}
  {{- if .Values.jibri.strategy }}
  strategy: {{- toYaml .Values.jibri.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "jitsi-meet.jibri.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "jitsi-meet.jibri.selectorLabels" . | nindent 8 }}
      {{- range $label, $value := mergeOverwrite .Values.global.podLabels .Values.jibri.podLabels }}
        {{ $label }}: {{ $value }}
      {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/jibri/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/jibri/xmpp-secret.yaml") . | sha256sum }}
      {{- range $annotation, $value := mergeOverwrite .Values.global.podAnnotations .Values.jibri.podAnnotations }}
        {{ $annotation }}: {{ $value | quote }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "jitsi-meet.serviceAccountName" . }}
      containers:
      {{- if .Values.jibri.metrics.enabled }}
      - name: metrics
        image: {{ .Values.jibri.metrics.image.repository }}:{{ .Values.jibri.metrics.image.tag }}
        imagePullPolicy: {{ .Values.jibri.metrics.image.pullPolicy }}
        securityContext:
          runAsUser: 10001
        args:
          - "-jibri-status-url=http://localhost:2222/jibri/api/v1.0/health"
        ports:
          - containerPort: 9889
            name: tcp-metrics
        resources:
      {{- toYaml .Values.jibri.metrics.resources | nindent 12 }}      
      {{- end }}        
      - name: {{ .Chart.Name }}
        securityContext:
          capabilities:
            add: ["SYS_ADMIN"]
        image: "{{ .Values.jibri.image.repository }}:{{ default .Chart.AppVersion .Values.jibri.image.tag }}"
        imagePullPolicy: {{ pluck "pullPolicy" .Values.jibri.image .Values.image | first }}
        ports:
        - name: http-internal
          containerPort: 3333
        - name: http-api
          containerPort: 2222
        {{- with default .Values.jibri.livenessProbe .Values.jibri.livenessProbeOverride }}
        livenessProbe:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with default .Values.jibri.readinessProbe .Values.jibri.readinessProbeOverride }}
        readinessProbe:
        {{- toYaml . | nindent 10 }}
        {{- end }}

        envFrom:
        - secretRef:
            name: {{ include "call-nested" (list . "prosody" "prosody.fullname") }}-jibri
        - configMapRef:
            name: {{ include "call-nested" (list . "prosody" "prosody.fullname") }}-common
        - configMapRef:
            name: {{ include "jitsi-meet.jibri.fullname" . }}

        {{- if (gt (int .Values.jibri.replicaCount) 1) }}
        # Set Jibri Instance ID based on pod name:
        env:
        - name: JIBRI_INSTANCE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- end }}
        resources:
          {{- toYaml .Values.jibri.resources | nindent 12 }}
        volumeMounts:
        - name: config
          mountPath: /config
        # S3 compatible
        {{- if .Values.jibri.s3.enabled }}            
        - mountPath: /aws
          name: aws-bin
          readOnly: true
        {{- end }}
        {{- if .Values.jibri.custom.contInit._10_config }}
        - name: custom-cont-inits
          mountPath: /etc/cont-init.d/10-config
          subPath: 10-config
        {{- end }}
        {{- if .Values.jibri.custom.defaults._jibri_conf }}
        - name: custom-defaults
          mountPath: /defaults/jibri.conf
          subPath: jibri.conf
        {{- end }}
        {{- if .Values.jibri.custom.defaults._logging_properties }}
        - name: custom-defaults
          mountPath: /defaults/logging.properties
          subPath: logging.properties
        {{- end }}
        {{- if .Values.jibri.custom.defaults._autoscaler_sidecar_config }}
        - name: custom-defaults
          mountPath: /defaults/autoscaler-sidecar.config
          subPath: autoscaler-sidecar.config
        {{- end }}
        {{- if .Values.jibri.custom.defaults._xorg_video_dummy_conf }}
        - name: custom-defaults
          mountPath: /defaults/xorg-video-dummy.conf
          subPath: xorg-video-dummy.conf
        {{- end }}
        {{- if .Values.jibri.custom.other._finalize_sh }}
        - name: custom-other
          mountPath: /config/finalize.sh
          subPath: finalize.sh
        {{- end }}
        - name: jibri-data
          mountPath: /data
        {{- if .Values.jibri.shm.enabled }}
        - name: dev-shm
          mountPath: /dev/shm
        {{- end }}

      volumes:
      {{- if .Values.jibri.s3.enabled }}      
      - name: aws-bin
        persistentVolumeClaim:
          claimName: {{ include "jitsi-meet.jibri.fullname" . }}-aws
      {{- end }}
      - name: config
        emptyDir: {}
      - name: custom-cont-inits
        configMap:
          defaultMode: 493
          name: {{ include "jitsi-meet.jibri.fullname" . }}-cont-inits
          items:
            - key: 10-config
              path: 10-config
      - name: custom-defaults
        configMap:
          name: {{ include "jitsi-meet.jibri.fullname" . }}-defaults
          items:
            - key: jibri.conf
              path: jibri.conf
            - key: logging.properties
              path: logging.properties
            - key: autoscaler-sidecar.config
              path: autoscaler-sidecar.config
            - key: xorg-video-dummy.conf
              path: xorg-video-dummy.conf
      - name: custom-other
        configMap:
          defaultMode: 493
          name: {{ include "jitsi-meet.jibri.fullname" . }}-other
      - name: jibri-data
        {{- if .Values.jibri.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.jibri.persistence.existingClaim | default (include "jitsi-meet.jibri.fullname" .) }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.jibri.shm.enabled }}
      - name: dev-shm
      {{-   if .Values.jibri.shm.useHost }}
        hostPath:
          path: /dev/shm
      {{-   else }}
        emptyDir:
          medium: Memory
          sizeLimit: {{ .Values.jibri.shm.size | default "2Gi" | quote }}
      {{-   end }}
      {{- end }}
    {{- with .Values.jibri.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jibri.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.jibri.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
